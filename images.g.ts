// Auto-generated code. Do not edit.
namespace myImages {

    helpers._registerFactory("image", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "image1":
            case "heroWalkFront1":return img`
. . . . . . f f f f . . . . . . 
. . . . f f f 2 2 f f f . . . . 
. . . f f f 2 2 2 2 f f f . . . 
. . f f f e e e e e e f f f . . 
. . f f e 2 2 2 2 2 2 e e f . . 
. . f e 2 f f f f f f 2 e f . . 
. . f f f f e e e e f f f f . . 
. f f e f b f 4 4 f b f e f f . 
. f e e 4 1 f d d f 1 4 e e f . 
. . f e e d d d d d d e e f . . 
. . . f e e 4 4 4 4 e e f . . . 
. . e 4 f 2 2 2 2 2 2 f 4 e . . 
. . 4 d f 2 2 2 2 2 2 f d 4 . . 
. . 4 4 f 4 4 5 5 4 4 f 4 4 . . 
. . . . . f f f f f f . . . . . 
. . . . . f f . . f f . . . . . 
`;
            case "image2":
            case "myImage":return img`
. . . . . . . . e . . . . . . . 
. . . . . . . . e . . . . . . . 
. . . . . . . e e e . . . . . . 
. . . . . . e e e e e . . . . . 
. . . . . . . b b b . . . . . . 
. . . . . . . b b b . . . . . . 
. . . . . . . b b b . . . . . . 
. . . . . . . b b b . . . . . . 
. . . . . . . b b b . . . . . . 
. . . . . . . b b b . . . . . . 
. . . . . . . b b b . . . . . . 
. . . . . . . . b . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`;
            case "image3":
            case "myImage0":return img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . e . . . . . . . . . 
. . . . . e e b b b b b b b b . 
. . . e e e e b b b b b b b b b 
. . . . . e e b b b b b b b b . 
. . . . . . e . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`;
        }
        return null;
    })

    helpers._registerFactory("animation", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "myAnim":
            case "anim1":return [img`
. . . . . . f f f f . . . . . . 
. . . . f f f 2 2 f f f . . . . 
. . . f f f 2 2 2 2 f f f . . . 
. . f f f e e e e e e f f f . . 
. . f f e 2 2 2 2 2 2 e e f . . 
. . f e 2 f f f f f f 2 e f . . 
. . f f f f e e e e f f f f . . 
. f f e f b f 4 4 f b f e f f . 
. f e e 4 1 f d d f 1 4 e e f . 
. . f e e d d d d d d e e f . . 
. . . f e e 4 4 4 4 e e f . . . 
. . e 4 f 2 2 2 2 2 2 f 4 e . . 
. . 4 d f 2 2 2 2 2 2 f d 4 . . 
. . 4 4 f 4 4 5 5 4 4 f 4 4 . . 
. . . . . f f f f f f . . . . . 
. . . . . f f . . f f . . . . . 
`, img`
. . . . . . . . . . . . . . . . 
. . . . . . f f f f . . . . . . 
. . . . f f f 2 2 f f f . . . . 
. . . f f f 2 2 2 2 f f f . . . 
. . f f f e e e e e e f f f . . 
. . f f e 2 2 2 2 2 2 e e f . . 
. . f e 2 f f f f f f 2 e f . . 
. . f f f f e e e e f f f f . . 
. f f e f b f 4 4 f b f e f f . 
. f e e 4 1 f d d f 1 4 e e f . 
. . f e e d d d d d d e e f . . 
. . . f e e 4 4 4 4 e e f . . . 
. . e 4 f 2 2 2 2 2 2 f 4 e . . 
. . 4 d f 2 2 2 2 2 2 f d 4 . . 
. . 4 4 f 4 4 5 5 4 4 f 4 4 . . 
. . . . . f f f f f f . . . . . 
`, img`
. . . . . . f f f f . . . . . . 
. . . . f f f 2 2 f f f . . . . 
. . . f f f 2 2 2 2 f f f . . . 
. . f f f e e e e e e f f f . . 
. . f f e 2 2 2 2 2 2 e e f . . 
. . f e 2 f f f f f f 2 e f . . 
. . f f f f e e e e f f f f . . 
. f f e f b f 4 4 f b f e f f . 
. f e e 4 1 f d d f 1 4 e e f . 
. . f e e d d d d d d e e f . . 
. . . f e e 4 4 4 4 e e f . . . 
. . e 4 f 2 2 2 2 2 2 f 4 e . . 
. . 4 d f 2 2 2 2 2 2 f d 4 . . 
. . 4 4 f 4 4 5 5 4 4 f 4 4 . . 
. . . . . f f f f f f . . . . . 
. . . . . f f . . f f . . . . . 
`];
        }
        return null;
    })

    helpers._registerFactory("song", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "song2":
            case "mySong":return hex`0078000408070401001c000f05001202c102c20100040500280000006400280003050006000004720004000800011b08000c00011d1400180001251c002000012224002800011d2c003000011e3000340001203400380001243c004000012044004800011b48004c00011d54005800012558005c00012260006400011b64006800012068006c00012570007400012078007c00011d7c008000012003001c0001dc00690000045e0100040000000000000000000005050001000003600000000800010c08001000010810001800010c18002000010820002800010c28003000010830003800010c38004000010840004800010c48005000010850005800010c58006000010860006800010c68007000010870007800010c78008000010804001c00100500640000041e000004000000000000000000000005000a0000044e000400080001160c001000011114001800011220002400010d2c003000011138003c0001114000440001164c005000011154005800011260006400010d6c007000011178007c0001117c008000011608001c000e050046006603320000040a002d00000064001400010500020000023c0010001800011918002000011b20002800011928003000012030003800012a40004800012548005000011960006800011b68007000011d78008000011b`;
            case "song1":
            case "note2":return hex`00780004081e0105001c000f0a006400f4010a0000040000000000000000000000000000000002c20100000800031b222a10001800022229200028000322292c3000380002222a40004800031b222a50005800022229600068000322292c7000780002222a80008800031b222a90009800022229a000a8000322292cb000b80002222ac000c800031b222ad000d800022229e000e8000322292cf000f80002222a00010801031b222a10011801022229200128010322292c3001380102222a40014801031b222a50015801022229600168010322292c7001780102222a80018801031b222a90019801022229a001a8010322292cb001b80102222ac001c801031b222ad001d801022229e001e8010322292cf001f80102222a00020802031b222a10021802022229200228020322292c3002380202222a40024802031b222a50025802022229600268020322292c7002780202222a80028802031b222a90029802022229a002a8020322292cb002b80202222ac002c802031b222ad002d802022229e002e8020322292cf002f80202222a00030803031b222a10031803022229200328030322292c3003380302222a40034803031b222a50035803022229600368030322292c7003780302222a80038803031b222a90039803022229a003a8030322292cb003b80302222a`;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
